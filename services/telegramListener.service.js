const fs = require('fs');
const path = require('path');
const xlsx = require('xlsx');
const axios = require('axios');
const sendEmail = require('./emailSender.service');
const TelegramBot = require('node-telegram-bot-api');
const { sleep } = require('../utils/global');
require('dotenv').config();

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });

bot.on('polling_error', (error) => {
  console.log(`[polling_error] ${error.code}: ${error.message}`);
});

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  // bot.sendMessage(chatId, 'üì• Hello');

  // N·∫øu tag bot
  if (msg.document) {
    // const fileId = msg.document.file_id;

    // const fileInfo = await bot.getFile(fileId);
    // const fileUrl = `https://api.telegram.org/file/bot${process.env.TELEGRAM_BOT_TOKEN}/${fileInfo.file_path}`;
    // bot.sendMessage(chatId, 'üì• ƒêang x·ª≠ l√Ω file Excel v√† g·ª≠i email...');
    // await handleExcelFile(fileUrl);
    
    // for (const customerName of customerList) {
    //   await sendEmail(customerName);
    //   await sleep(3000);
    // }
  }
});

const handleGetCustomerFilesMap = () => {
  const sourceDir = "/Users/DeeTee/Downloads/SMALL T 03.2025";
  const resultDir = "/Users/DeeTee/Downloads/RESULT";
  
  // T·∫°o th∆∞ m·ª•c result n·∫øu ch∆∞a t·ªìn t·∫°i
  if (!fs.existsSync(resultDir)) {
    fs.mkdirSync(resultDir);
  }

  // ƒê·ªçc t·∫•t c·∫£ file trong th∆∞ m·ª•c g·ªëc
  const files = fs.readdirSync(sourceDir).filter(file => file.endsWith('.pdf'));
    
  const customerFilesMap = {};
  
  files.forEach(file => {
    const parts = file.split('_');
    const customerName = parts[3]; // ph·∫ßn tr∆∞·ªõc _signed (sau ID)
    const customerDir = path.join(resultDir, customerName);
    const destPath = path.join(customerDir, file);
    // customerList.push(customerName);
    if (!customerFilesMap[customerName]) customerFilesMap[customerName] = [];
    customerFilesMap[customerName].push(destPath);
  });
  return customerFilesMap;
}

function extractEmailsFromRaw(raw) {
  if (!raw) return [];

  return raw
    .split(/[,;]+/) // t√°ch theo d·∫•u , ho·∫∑c ;
    .map(email => email.trim()) // lo·∫°i kho·∫£ng tr·∫Øng
    .filter(email => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)); // l·ªçc ƒë√∫ng ƒë·ªãnh d·∫°ng email
}

async function handleExcelFile(fileUrl) {
  try {
    const customerFilesMap = handleGetCustomerFilesMap();
    const response = await axios.get(fileUrl, { responseType: 'arraybuffer' });
    const workbook = xlsx.read(response.data, { type: 'buffer' });
    const sheet = workbook.Sheets[workbook.SheetNames[0]];
    const rows = xlsx.utils.sheet_to_json(sheet);

    for (const row of rows) {
      const customerCode = row['M√£ kh√°ch']?.toString().trim();
      const emailRaw = row['EMAIL']?.toString().trim();
      const emailList = extractEmailsFromRaw(emailRaw);
      console.log(" emailList", emailList)
      const title = `${customerCode} - PHI·∫æU KI·ªÇM SO√ÅT MUA B√ÅN HO√Å CH·∫§T - T·ª´ ng√†y 01/03/2025 ƒë·∫øn ng√†y 31/03/2025`;
      const body = `
        K√≠nh g·ª≠i Qu√Ω C√¥ng Ty,

        CTY Smallfortune, xin g·ª≠i ch·ª©ng t·ª´ Phi·∫øu Ki·ªÉm So√°t Mua B√°n H√≥a Ch·∫•t v·ªõi c√°c th√¥ng tin chi ti·∫øt nh∆∞ sau:

        Th·ªùi gian ph√°t sinh mua b√°n : T·ª´ 01/03/2025 ƒë·∫øn 31/03/2025.

        Anh/ch·ªã vui l√≤ng K√Ω, ƒë√≥ng d·∫•u v√† g·ª≠i tr·∫£ cho cty ch√∫ng t√¥i 1 b·∫£n g·ªëc tr∆∞·ªõc ng√†y 30/04/2025 theo ph∆∞∆°ng th·ª©c sau:

        1. G·ª≠i File scan :
        Vui l√≤ng g·ª≠i ƒë·∫øn ƒë·ªãa ch·ªâ email : thu.smallfortune@gmail.com

        ho·∫∑c
        2. G·ª≠i ch·ª©ng t·ª´ b·∫£n gi·∫•y  :
        Vui l√≤ng g·ª≠i Chuy·ªÉn Ph√°t Nhanh v·ªõi th√¥ng tin ng∆∞·ªùi nh·∫≠n nh∆∞ sau:
        C√¥ng ty TNHH MTV Nguy√™n V·∫≠t Li·ªáu Smallfortune
        60 H√≤a B√¨nh, Ph∆∞·ªùng 5, Qu·∫≠n 11, Tp HCM
        Ng∆∞·ªùi nh·∫≠n : Mrs. Hoa ‚Äì 082 533 5481

        Ghi ch√∫ : Qu√Ω c√¥ng ty c√≥ th·ªÉ k√Ω ch·ª©ng t·ª´ b·∫±ng CH·ªÆ K√ù S·ªê.

        TH√îNG TIN THAM KH·∫¢O

        Anh/ch·ªã tham kh·∫£o qui ƒë·ªãnh c·ªßa BCT v·ªÅ vi·ªác n√†y theo link sau:
        https://thuvienphapluat.vn/phap-luat/mua-ban-hoa-chat-co-can-phieu-kiem-soat-mua-ban-hoa-chat-doc-hay-khong-truong-hop-mua-ban-hoa-chat--461122-7654.htmlP
      `;

      if (customerCode && customerFilesMap?.[customerCode]?.length) {
        const files = customerFilesMap[customerCode]
        await sendEmail(title, emailList, body, files);
        await sleep(3000);
      }
    }
  } catch (err) {
    console.error('‚ùå L·ªói ƒë·ªçc file Excel:', err.message);
  }
}
